library(plyr)
  
  cbbmp.load<-function(years=1995:2012,filepath=getwd(),save=FALSE){ 
  
  ##error out if the years are beyond the possible range of datasets
  
  if (min(years) < 1995) {stop("data not available before 1995")}
  
  if (max(years) >= as.numeric(format(Sys.Date(), "%Y"))) 
    {stop("data for the current or future years are not available")}

  ## allows for alternate file destination  

  env <- getwd()

  setwd(filepath)


  base.url <- "http://www.baybenthos.versar.com/SciData/"

  table.ext <- c("bm.txt", "sed.txt", "wq.txt")

  region <- c("mdbe", "vabe")

  year.url <- paste0("CBPData", years)

  region.year <- c(paste0(region[[1]], substr(years, start=3, stop=4)),
               paste0(region[[2]], substr(years, start=3, stop=4)))

  url.main<-paste0(base.url,year.url,"/",region.year,"_")

  full.url <-c(paste0(url.main,table.ext[[1]]),
    paste0(url.main,table.ext[[2]]),
    paste0(url.main,table.ext[[3]]))

  filepath <-c(paste0(region.year,"_",table.ext[[1]]),
    paste0(region.year,"_",table.ext[[2]]),
    paste0(region.year,"_",table.ext[[3]]))



  for (i in 1:length(full.url)) {
    download.file(full.url[i], destfile = filepath[i], mode="wb")
  }
  

  #note there are (year * region) datasets per type, and 3 types

  gap.y <- (length(years)) * 2  

  gap.z <- (length(years)) * 2 * 2
 
  options(stringsAsFactors=FALSE)

  v.m <- list()
  
  for (i in 1:length(years)) {  
  
    #x is the biomass data for maryland
    x <- read.csv(filepath[i], row.names= NULL)
  
    colnames(x) <- colnames(x)[-1]
  
    x <- x[-length(x)]

    x$LKUP <- paste(x$STATION, x$YEARCODE, x$SAMPLE_NUMBER)

    ##converting missing value notation to NA and VALUE to numeric
    ##not necessary for bm datasets, but is for wq and sed
    x$VALUE <- as.numeric(gsub(pattern= "       .    ",
      replacement= NA, fixed= TRUE, x= x$VALUE))
    x$REGION <- "Maryland"
    
  
    ##y is the sediment characteristic data for maryland
    y <- read.csv(as.character(filepath[i + gap.y]), row.names=NULL)

    colnames(y) <- colnames(y)[-1]

    y <- y[-length(y)]

    colnames(y)[length(y)] <- "SAMP_TYPE"


    y$LKUP <- paste(y$STATION, y$YEARCODE, y$SAMPLE_NUMBER)

    y$VALUE <- as.numeric(gsub(pattern= "       .    ",
      replacement= NA, fixed= TRUE, x= y$VALUE))
    y$REGION <- "Maryland"


    ##z is the water quality data for maryland
    z <- read.csv(filepath[i + gap.z], row.names= NULL)
    colnames(z) <- colnames(z)[-1]
    z <- z[-length(z)]
    colnames(z)[length(z)] <- "SAMP_TYPE"
    z$LKUP <- paste(z$STATION, z$YEARCODE, z$SAMPLE_NUMBER)
    z$VALUE <- as.numeric(z$VALUE)
    z$REGION <- "Maryland"

    
    #a is the biomass data for the virginia province
    a <- read.csv(filepath[i+1], row.names= NULL)
  
    colnames(a) <- colnames(a)[-1]
  
    a <- a[-length(a)]

    a$LKUP <- paste(a$STATION, a$YEARCODE, a$SAMPLE_NUMBER)


    a$VALUE <- as.numeric(gsub(pattern= "       .    ",
      replacement= NA, fixed= TRUE, x= a$VALUE))
    a$REGION <- "Virginia"

  
    ##b is the sediment characteristic data, virginia province
    b <- read.csv(as.character(filepath[i+ 1 + gap.y]), row.names=NULL)

    colnames(b) <- colnames(b)[-1]

    b <- b[-length(b)]

    colnames(b)[length(b)] <- "SAMP_TYPE"

    b$LKUP <- paste(b$STATION, b$bEARCODE, b$SAMPLE_NUMBER)

    b$VALUE <- as.numeric(gsub(pattern= "       .    ",
      replacement= NA, fixed= TRUE, x= b$VALUE))
    b$REGION <- "Virginia"


    ##c is the water quality data, virginia province
    c <- read.csv(filepath[i+ 1 + gap.z], row.names= NULL)
    colnames(c) <- colnames(c)[-1]
    c <- c[-length(c)]
    colnames(c)[length(c)] <- "SAMP_TYPE"
    c$LKUP <- paste(c$STATION, c$YEARCODE, c$SAMPLE_NUMBER)
    c$VALUE <- as.numeric(c$VALUE)
    c$REGION <- "Virginia"
    

    ##Joining abcdxyz using smartbind (requires 'gtools' package)
    merge <- rbind.fill(x, a, y, b, z, c)

    v.m[[i]]<-merge
    
  }


##combine all years into single dataset  
cbbmp<-do.call(rbind.fill,v.m)    
  
##option to save dataset for quick future reference    
if(save)     {save(cbbmp,file = "cbbmp.Rdata")}

    
##optional return wd to original (if changed for purpose of saving files)  
setwd(env)    
    
return(cbbmp)
  
}

