#' Summarize molten cbbmp dataset
#' 
#' This function takes a molten cbbmp database created using `biom.melt` and  
#' returns a summary table. One can specify by which variables to summarize parameter data.
#'  
#'  
#' @param x.melt molten data.frame output (i.e., object created via `biom.melt` function) (see warnings)
#' @param ... vector of variables (from data.frame supplied as `x` arg) to "split" by when calculating summary statistics in sums table.
#' 
#' @details
#' 
#' The summary table returns the following statistics:
#' -sample size (n)
#' -minimum (min)
#' -maximum (max)
#' -mean
#' -standard deviation (sd)
#' -quantiles (5th, 10th, 25th, 50th [median], 75th, 90th, and 95th percentiles)
#' 
#' In order to obtain summary statistics at different levels of the dataset, a vector of column names
#' can be supplied in place of the ellipses `...`. For example, one could specify "REGION" and/or "YEAR",
#' which would return summary statistics within each region and/or year. If no variable is specified,
#' all data are pooled and summarized solely by measurement parameter.
#' 
#' 
#' @return Creates data.frame
#' 
#' @section Warnings:
#' This function calls specific headings from biom.DL dataset (e.g., `cbbmp` dataset), so it
#' is unlikely to work with other molten data.frames. If you would like to use this function with other
#' datasets, you must specify that the melt arguments `value.var` = "VALUE" and 
#' `variable.name` = "PARAMETER". 
#' 
#' 
#' @export
biom.sums<- function(x.melt, ...) {   
   
   options(digits = 3)
   
biom.sum <- x.melt %>% 
   group_by( ..., PARAMETER) %>%
   dplyr::summarize(n = length(VALUE[!(is.na(VALUE))]),
             min = min(VALUE, na.rm = TRUE),
             max = max(VALUE, na.rm = TRUE),
             mean = mean(VALUE, na.rm = TRUE),
             sd = sd(VALUE, na.rm = TRUE),
             p.05 = quantile(VALUE, probs = 0.05, , na.rm = TRUE),
             p.10 = quantile(VALUE, probs = 0.1, na.rm = TRUE),
             p.25 = quantile(VALUE, probs = 0.25, na.rm = TRUE),
             p.50 = quantile(VALUE, probs = 0.5, na.rm = TRUE),
             p.75 = quantile(VALUE, probs = 0.75, na.rm = TRUE),
             p.90 = quantile(VALUE, probs = 0.90, na.rm = TRUE),
             p.95 = quantile(VALUE, probs = 0.95, na.rm = TRUE))

  return(biom.sum)

}


